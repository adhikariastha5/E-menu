import mysql.connector
from tkinter import *
from tkinter import ttk
import tkinter as tk 
from PIL import Image, ImageTk
from tkinter import font  as tkfont
import tkinter.messagebox


        
class Emenurpi(tk.Tk):
    
    def __init__(self, *args, **kwargs):
        tk.Tk.__init__(self, *args, **kwargs)

        self.title_font = tkfont.Font(family='times', size=8, weight="bold", slant="italic")

        container = tk.Frame(self)
        container.pack(side="top", fill="both", expand=True)
        container.grid_rowconfigure(0, weight=1)
        container.grid_columnconfigure(0, weight=1)

        self.frames = {}
        self.frames["emenuHome"] = EmenuHome(parent=container, controller=self)
        self.frames["menuList"] = MenuList(parent=container, controller=self)
        self.frames["aboutUs"] = AboutUs(parent=container, controller=self)
        self.frames["feedBack"] = Feedback(parent=container, controller=self)
        self.frames["appetizers"] = Appetizers(parent=container, controller=self)
        self.frames["soupansal"] = SoupAndSal(parent=container, controller=self)
        self.frames["maindish"] = MinDishes(parent=container, controller=self)
        self.frames["desserts"] = Desserts(parent=container, controller=self)
        self.frames["drinks"] = Drinks(parent=container, controller=self)
        self.frames["myorder"] = Myorder(parent=container, controller=self)

        self.frames["emenuHome"].grid(row=0, column=0, sticky="nsew")
        self.frames["menuList"].grid(row=0, column=0, sticky="nsew")
        self.frames["aboutUs"].grid(row=0, column=0, sticky="nsew")
        self.frames["feedBack"].grid(row=0, column=0, sticky="nsew")
        self.frames["appetizers"].grid(row=0, column=0, sticky="nsew")
        self.frames["soupansal"].grid(row=0, column=0, sticky="nsew")
        self.frames["drinks"].grid(row=0, column=0, sticky="nsew")
        self.frames["desserts"].grid(row=0, column=0, sticky="nsew")
        self.frames["maindish"].grid(row=0, column=0, sticky="nsew")
        self.frames["myorder"].grid(row=0, column=0, sticky="nsew")
        self.show_frame("emenuHome")

    def show_frame(self, page_name):
        '''Show a frame for the given page name'''
        frame = self.frames[page_name]
        frame.tkraise()
    '''
    def fun(resu):
        yo=50
        for row in resu:
            id=row[0]
            name=row[1]
            price=row[2]
    
            listBox = Listbox(self, height=1,width=40,highlightcolor="red")
            listBox.place(x=120,y=yo)
            listBox.insert(END,row)
            spin=Spinbox(self, from_=0, to=10, width=10).place(x=370,y=yo)
            button=Button(self, text='+',width=4).place(x=450,y=yo)
            yo=yo+30
    '''

        

class EmenuHome(tk.Frame):
    
    
    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller
        label = tk.Label(self)
        #label1.config(height=600,width=800)
        label.pack()
        
        
        def resize_image(event):
            new_width = event.width
            new_height = event.height
            image = copy_of_image.resize((new_width, new_height))
            photo = ImageTk.PhotoImage(image)
            label.config(image = photo)
            label.image = photo 

        image = Image.open('finedine.jpg')
        copy_of_image = image.copy()
        photo = ImageTk.PhotoImage(image)
        label = ttk.Label(label, image = photo)
        label.bind('<Configure>', resize_image)
        label.pack()

  
        button1=Button(label,text="Menu", fg="white",bg="orange",command=lambda: controller.show_frame("menuList")).grid(row=0,column=0,ipadx=12,ipady=8,padx=12,pady=10)
        button2=Button(label,text="My order", fg="white",bg="orange",command=lambda:controller.show_frame("myorder")).grid(row=1,column=1,ipadx=8,ipady=8,padx=12,pady=10)
        button3=Button(label,text="About us", fg="white",bg="orange",command=lambda: controller.show_frame("aboutUs")).grid(row=2,column=2,ipadx=8,ipady=8,padx=12,pady=10)
        button4=Button(label,text="Feedback", fg="white",bg="orange",command=lambda: controller.show_frame("feedBack")).grid(row=3,column=3,ipadx=8,ipady=8,padx=12,pady=10)


def onSubmitclick():
    cro=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='newdb')
    mycursor=cro.cursor()
    mycursor.execute("""INSERT INTO notif_details(notif_details_) VALUES('Order Received from Table no.1')""")
    cro.commit()

    
       
class MenuList(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller
        label2 = tk.Label(self)
        label2.pack(side="top", fill="x", pady=10)

        
        button6=Button(self, text="Appetizers",height=2,command=lambda: controller.show_frame("appetizers")).pack(fill=X)
        button7=Button(self, text="Salads",height=2,command=lambda: controller.show_frame("soupansal")).pack(fill=X)
        button8=Button(self, text="Main Dishes",height=2,command=lambda: controller.show_frame("maindish")).pack(fill=X)
        button9=Button(self, text="Drinks",height=2,command=lambda: controller.show_frame("drinks")).pack(fill=X)
        button10=Button(self, text="Desserts",height=2,command=lambda: controller.show_frame("desserts")).pack(fill=X)
        button = tk.Button(self, text="Back",
                           command=lambda: controller.show_frame("emenuHome")).pack()
        button33=Button(self, text="place order",height=2,command=onSubmitclick()).pack()

class Myorder(tk.Frame):
    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller
        label2 = tk.Label(self)
        label2.pack(side="top", fill="x", pady=10)
        #def myorder():
        conn=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='newdb')
        mycursor=conn.cursor()
        mycursor.execute("SELECT * FROM ORDERR_FRM_CLIENT")
        resultse=mycursor.fetchall()
        
        yo=50
        for i in resultse:
            id=i[0]
            name=i[1]
            price=i[3]

            listBox = Listbox(self, height=1,width=40,highlightcolor="red")
            listBox.place(x=100,y=yo)
            listBox.insert(END,name)
            listBox1 = Listbox(self, height=1,width=10,highlightcolor="red")
            listBox1.place(x=350,y=yo)
            listBox1.insert(END,price)
            yo=yo+30


        button = tk.Button(self, text="Back",
                           command=lambda: controller.show_frame("emenuHome")).place(x=300,y=380)




class AboutUs(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller
     
        label = tk.Label(self, text="\tAbout Us:\nOur restaurant aims at providing not only best and hygienic food but,\n also n a fast service delivery with the help of pur electronic menu system.\n\tWith this advance technology customers will not have to wait for a long time for their orders",
                                font=controller.title_font)
        label.pack(side="top", fill="x", pady=10)
       
        
        button = tk.Button(self, text="OK",
                           command=lambda: controller.show_frame("emenuHome"))
        button.pack()



def insdb(name,price):
    #qty=int(spin.get())
    cro=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='newdb')
    mycursor=cro.cursor()
    mycursor.execute("""INSERT INTO orderr_frm_client(name,quantity,price) VALUES(%s,%s,%s)""",(name,1,price))
    cro.commit()

class Appetizers(tk.Frame):
    
    def __init__(self,parent,controller):
        tk.Frame.__init__(self,parent)
        self.controller=controller

        label8 = tk.Label(self)
        label8.pack(side="top", fill="x", pady=10)  
            
        button1=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Garlic Bread','150')).place(x=420,y=50)
        button2=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Hummus Crostini','200')).place(x=420,y=80)
        button3=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Tomao Bruchetta','170'))
        button3.place(x=420,y=110)
        button4=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Biancaneve','160'))
        button4.place(x=420,y=140)
       
              
        conn=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='menu')
        mycursor=conn.cursor()
        mycursor.execute("SELECT * FROM APPETIZERS")
        results=mycursor.fetchall()

        yo=50
        for i in results:

                
            id=i[0]
            name=i[1]
            price=i[3]
            
            listBox = Listbox(self, height=1,width=40,highlightcolor="red")
            listBox.place(x=100,y=yo)
            
            listBox.insert(END,name)
            listBox1 = Listbox(self, height=1,width=10,highlightcolor="red")
            listBox1.place(x=350,y=yo)
            listBox1.insert(END,price)
            yo=yo+30
            

        
        buttone = tk.Button(self, text="Back",
                           command=lambda: controller.show_frame("menuList"))
        buttone.place(x=300,y=260)
    
            
class SoupAndSal(tk.Frame):
    def __init__(self,parent,controller):
        tk.Frame.__init__(self,parent)
        self.controller=controller
        label09 = tk.Label(self)
        label09.pack(side="top", fill="x", pady=10)
        
        button1=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Greek Salad','195')).place(x=420,y=50)
        button2=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Garden Salad','195')).place(x=420,y=80)
        button3=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Mozarella Salad','225'))
        button3.place(x=420,y=110)
        button4=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Chick Pea Salad','225'))
        button4.place(x=420,y=140)
       
              
        conn=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='menu')
        mycursor=conn.cursor()
        mycursor.execute("SELECT * FROM SALAD")
        results=mycursor.fetchall()

        yo=50
        for i in results:

                
            id=i[0]
            name=i[1]
            price=i[3]
            
            listBox = Listbox(self, height=1,width=40,highlightcolor="red")
            listBox.place(x=100,y=yo)
            
            listBox.insert(END,name)
            listBox1 = Listbox(self, height=1,width=10,highlightcolor="red")
            listBox1.place(x=350,y=yo)
            listBox1.insert(END,price)
            yo=yo+30
            
        
        buttone1 = tk.Button(self, text="Back",
                           command=lambda: controller.show_frame("menuList"))
        buttone1.place(x=300,y=260)

        

class Desserts(tk.Frame):
    def __init__(self,parent,controller):
        tk.Frame.__init__(self,parent)
        self.controller=controller
        label80 = tk.Label(self)
        label80.pack(side="top", fill="x", pady=10)
        
        conn=mysql.connector.connect(user='keks',password='',host='10.10.10.231',database='menu')
        mycursor=conn.cursor()
        mycursor.execute("SELECT * FROM DESERT")
        results=mycursor.fetchall()

        button1=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Brownie','75')).place(x=420,y=50)
        button2=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Apple Pie','125')).place(x=420,y=80)
        button3=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Mousee of the day','90'))
        button3.place(x=420,y=110)
        button4=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Custard','125'))
        button4.place(x=420,y=140)
       
              
        conn=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='menu')
        mycursor=conn.cursor()
        mycursor.execute("SELECT * FROM SALAD")
        results=mycursor.fetchall()

        yo=50
        for i in results:

                
            id=i[0]
            name=i[1]
            price=i[3]
            
            listBox = Listbox(self, height=1,width=40,highlightcolor="red")
            listBox.place(x=100,y=yo)
            
            listBox.insert(END,name)
            listBox1 = Listbox(self, height=1,width=10,highlightcolor="red")
            listBox1.place(x=350,y=yo)
            listBox1.insert(END,price)
            yo=yo+30
            
        
        buttone = tk.Button(self, text="Back",
                           command=lambda: controller.show_frame("menuList"))
        buttone.place(x=300,y=260)
     
class Drinks(tk.Frame):
    def __init__(self,parent,controller):
        tk.Frame.__init__(self,parent)
        self.controller=controller
        label88= tk.Label(self)
        label88.pack(side="top", fill="x", pady=10)
        button1=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Milk Shakes','130')).place(x=420,y=50)
        button2=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Lime Coolers','90')).place(x=420,y=80)
        button3=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Tea','95'))
        button3.place(x=420,y=110)
        button4=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Coffee','60'))
        button4.place(x=420,y=140)
       
              
        conn=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='menu')
        mycursor=conn.cursor()
        mycursor.execute("SELECT * FROM DRINKS")
        results=mycursor.fetchall()

        yo=50
        for i in results:

                
            id=i[0]
            name=i[1]
            price=i[3]
            
            listBox = Listbox(self, height=1,width=40,highlightcolor="red")
            listBox.place(x=100,y=yo)
            
            listBox.insert(END,name)
            listBox1 = Listbox(self, height=1,width=10,highlightcolor="red")
            listBox1.place(x=350,y=yo)
            listBox1.insert(END,price)
            yo=yo+30
            
       
        buttone = tk.Button(self, text="Back",
                           command=lambda: controller.show_frame("menuList"))
        buttone.place(x=300,y=260)
       
class MinDishes(tk.Frame):
    def __init__(self,parent,controller):
        tk.Frame.__init__(self,parent)
        self.controller=controller
        label87= tk.Label(self)
        label87.pack(side="top", fill="x", pady=10)
        button1=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Al Fred0','275')).place(x=420,y=50)
        button2=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Lasagna','300')).place(x=420,y=80)
        button3=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Risotto','300'))
        button3.place(x=420,y=110)
        button4=Button(self, text='Add to Cart',width=20,command=lambda:insdb('Firewood Pizza','350'))
        button4.place(x=420,y=140)
       
              
        conn=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='menu')
        mycursor=conn.cursor()
        mycursor.execute("SELECT * MAIN_DISH")
        results=mycursor.fetchall()

        yo=50
        for i in results:

                
            id=i[0]
            name=i[1]
            price=i[3]
            
            listBox = Listbox(self, height=1,width=40,highlightcolor="red")
            listBox.place(x=100,y=yo)
            
            listBox.insert(END,name)
            listBox1 = Listbox(self, height=1,width=10,highlightcolor="red")
            listBox1.place(x=350,y=yo)
            listBox1.insert(END,price)
            yo=yo+30
            
        buttone = tk.Button(self, text="Back",
                           command=lambda: controller.show_frame("menuList"))
        buttone.place(x=300,y=260)
def retrieve_input():
            inputValue=textbox.get("1.0","end-1c")
            print(inputValue)
        
            def dbenter(inputValue):
                conne=mysql.connector.connect(user='root',password='',host='127.0.0.1',database='newdb')
                mycursor=conne.cursor()
                mycursor.execute("INSERT INTO feedbackk(feedback_details) VALUES(%s)",(inputValue))
                conne.commit()
    
    
class Feedback(tk.Frame):
    def __init__(self,parent,controller):
        tk.Frame.__init__(self,parent)
        self.controller=controller
        label=tk.Label(self, text="Wirte your Feedback", font=controller.title_font).pack()
        
            

        textbox = Text(self,height=4,width=100)
        textbox.pack()
                        
       
        buttona = tk.Button(self, text="Back",
                           command=lambda: controller.show_frame("emenuHome"))
        buttona.pack()
        buttonq = tk.Button(self, text="Submit",command=lambda:dbenter(ram))
        buttonq.pack()
        #buttonq.bind("<Button-1>",dbenter)


if __name__ == "__main__":
    app = Emenurpi()
    app.mainloop()

    